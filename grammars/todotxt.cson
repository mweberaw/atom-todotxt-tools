'fileTypes': [
  'todo.txt'
  'done.txt'
]
'name': 'TodoTXT'
'patterns': [
  {
    'begin': '^x (\\d{4}-\\d{2}-\\d{2} )(\\d{4}-\\d{2}-\\d{2} )?'
    'end': '$'
    'name': 'comment.line.todotxt'
  }
  {
    'match': 't:\\d{4}-\\d{2}-\\d{2}'
    'name': 'constant.language.todotxt.date'
  }
  {
    'match': 'due:\\d{4}-\\d{2}-\\d{2}'
    'name': 'constant.language.todotxt.due'
  }
  {
    'match': 'rec:[+]?\\d+[dwmy]'
    'name': 'constant.language.todotxt.rec'
  }
  {
    'match': '[^\\s:]+:[^\\s:]+'
    'name': 'constant.other.todotxt'
  }
  {
    'match': '\\@\\S*'
    'name': 'entity.name.type.todotxt.context'
  }
  {
    'match': '\\+\\S*'
    'name': 'entity.name.function.todotxt.project'
  }
  {
    'match': '^(\\([A-Z]\\) )(\\d{4}-\\d{2}-\\d{2} )?'
    'captures':
      '1':
        'name': 'keyword.control.todotxt.priority'
      '2':
        'name': 'entity.name.tag.todotxt.date'
  }
  {
    'match': '^(\\d{4}-\\d{2}-\\d{2} )'
    'name': 'entity.name.tag.todotxt.date'
  }
]
'scopeName': 'text.todotxt'
